/**
 * Lyrics Generation
 * Lyric generation capstone project.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.LyricsGeneration) {
      root.LyricsGeneration = {};
    }
    root.LyricsGeneration.LyricsRequest = factory(root.LyricsGeneration.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The LyricsRequest model module.
   * @module model/LyricsRequest
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>LyricsRequest</code>.
   * @alias module:model/LyricsRequest
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>LyricsRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LyricsRequest} obj Optional instance to populate.
   * @return {module:model/LyricsRequest} The populated <code>LyricsRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('mode')) {
        obj['mode'] = ApiClient.convertToType(data['mode'], 'Number');
      }
      if (data.hasOwnProperty('danceability')) {
        obj['danceability'] = ApiClient.convertToType(data['danceability'], 'Number');
      }
      if (data.hasOwnProperty('energy')) {
        obj['energy'] = ApiClient.convertToType(data['energy'], 'Number');
      }
      if (data.hasOwnProperty('duration')) {
        obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
      }
      if (data.hasOwnProperty('tempo')) {
        obj['tempo'] = ApiClient.convertToType(data['tempo'], 'Number');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('artist')) {
        obj['artist'] = ApiClient.convertToType(data['artist'], 'String');
      }
      if (data.hasOwnProperty('year')) {
        obj['year'] = ApiClient.convertToType(data['year'], 'Number');
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Song mode. 0 if minor, 1 if major.
   * @member {Number} mode
   */
  exports.prototype['mode'] = undefined;
  /**
   * @member {Number} danceability
   */
  exports.prototype['danceability'] = undefined;
  /**
   * @member {Number} energy
   */
  exports.prototype['energy'] = undefined;
  /**
   * @member {Number} duration
   */
  exports.prototype['duration'] = undefined;
  /**
   * @member {Number} tempo
   */
  exports.prototype['tempo'] = undefined;
  /**
   * Song title.
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * Name of the artist.
   * @member {String} artist
   */
  exports.prototype['artist'] = undefined;
  /**
   * Year in which song was composed
   * @member {Number} year
   */
  exports.prototype['year'] = undefined;
  /**
   * Tags to be used as seed words for lyric generation.
   * @member {Array.<String>} tags
   */
  exports.prototype['tags'] = undefined;



  return exports;
}));


